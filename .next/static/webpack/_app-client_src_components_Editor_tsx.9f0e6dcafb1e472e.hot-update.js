"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-client_src_components_Editor_tsx",{

/***/ "(app-client)/./src/store/Store.ts":
/*!****************************!*\
  !*** ./src/store/Store.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Store: function() { return /* binding */ Store; },\n/* harmony export */   isEditorAudioElement: function() { return /* binding */ isEditorAudioElement; },\n/* harmony export */   isEditorImageElement: function() { return /* binding */ isEditorImageElement; },\n/* harmony export */   isEditorVideoElement: function() { return /* binding */ isEditorVideoElement; }\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! mobx */ \"(app-client)/./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var fabric__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fabric */ \"(app-client)/./node_modules/fabric/dist/fabric.js\");\n/* harmony import */ var fabric__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fabric__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils */ \"(app-client)/./src/utils/index.ts\");\n/* harmony import */ var animejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! animejs */ \"(app-client)/./node_modules/animejs/lib/anime.es.js\");\n/* harmony import */ var _utils_fabric_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/fabric-utils */ \"(app-client)/./src/utils/fabric-utils.ts\");\n/* harmony import */ var _ffmpeg_ffmpeg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ffmpeg/ffmpeg */ \"(app-client)/./node_modules/@ffmpeg/ffmpeg/dist/esm/index.js\");\n/* harmony import */ var _ffmpeg_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ffmpeg/util */ \"(app-client)/./node_modules/@ffmpeg/util/dist/esm/index.js\");\n\n\n\n\n\n\n\nclass Store {\n    get currentTimeInMs() {\n        return this.currentKeyFrame * 1000 / this.fps;\n    }\n    setCurrentTimeInMs(time) {\n        this.currentKeyFrame = Math.floor(time / 1000 * this.fps);\n    }\n    setSelectedMenuOption(selectedMenuOption) {\n        this.selectedMenuOption = selectedMenuOption;\n    }\n    setCanvas(canvas) {\n        this.canvas = canvas;\n        if (canvas) {\n            canvas.backgroundColor = this.backgroundColor || canvas.TextColor;\n        }\n    }\n    setBackgroundColor(backgroundColor) {\n        this.backgroundColor = backgroundColor;\n        if (this.canvas) {\n            this.canvas.backgroundColor = backgroundColor;\n        }\n    }\n    setTextColor(TextColor) {\n        this.TextColor = TextColor;\n        if (this.canvas) {\n            this.canvas.TextColor = TextColor;\n        }\n    }\n    updateEffect(id, effect) {\n        const index = this.editorElements.findIndex((element)=>element.id === id);\n        const element = this.editorElements[index];\n        if (isEditorVideoElement(element) || isEditorImageElement(element)) {\n            element.properties.effect = effect;\n        }\n        this.refreshElements();\n    }\n    setVideos(videos) {\n        this.videos = videos;\n    }\n    addVideoResource(video) {\n        this.videos = [\n            ...this.videos,\n            video\n        ];\n    }\n    addAudioResource(audio) {\n        this.audios = [\n            ...this.audios,\n            audio\n        ];\n    }\n    addImageResource(image) {\n        this.images = [\n            ...this.images,\n            image\n        ];\n    }\n    addAnimation(animation) {\n        this.animations = [\n            ...this.animations,\n            animation\n        ];\n        this.refreshAnimations();\n    }\n    updateAnimation(id, animation) {\n        const index = this.animations.findIndex((a)=>a.id === id);\n        this.animations[index] = animation;\n        this.refreshAnimations();\n    }\n    refreshAnimations() {\n        animejs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].remove(this.animationTimeLine);\n        this.animationTimeLine = animejs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].timeline({\n            duration: this.maxTime,\n            autoplay: false\n        });\n        for(let i = 0; i < this.animations.length; i++){\n            var _editorElement;\n            const animation = this.animations[i];\n            const editorElement = this.editorElements.find((element)=>element.id === animation.targetId);\n            const fabricObject = (_editorElement = editorElement) === null || _editorElement === void 0 ? void 0 : _editorElement.fabricObject;\n            if (!editorElement || !fabricObject) {\n                continue;\n            }\n            fabricObject.clipPath = undefined;\n            switch(animation.type){\n                case \"fadeIn\":\n                    {\n                        this.animationTimeLine.add({\n                            opacity: [\n                                0,\n                                1\n                            ],\n                            duration: animation.duration,\n                            targets: fabricObject,\n                            easing: \"linear\"\n                        }, editorElement.timeFrame.start);\n                        break;\n                    }\n                case \"fadeOut\":\n                    {\n                        this.animationTimeLine.add({\n                            opacity: [\n                                1,\n                                0\n                            ],\n                            duration: animation.duration,\n                            targets: fabricObject,\n                            easing: \"linear\"\n                        }, editorElement.timeFrame.end - animation.duration);\n                        break;\n                    }\n                case \"slideIn\":\n                    {\n                        var _this_canvas, _this_canvas1;\n                        const direction = animation.properties.direction;\n                        const targetPosition = {\n                            left: editorElement.placement.x,\n                            top: editorElement.placement.y\n                        };\n                        const startPosition = {\n                            left: direction === \"left\" ? -editorElement.placement.width : direction === \"right\" ? (_this_canvas = this.canvas) === null || _this_canvas === void 0 ? void 0 : _this_canvas.width : editorElement.placement.x,\n                            top: direction === \"top\" ? -editorElement.placement.height : direction === \"bottom\" ? (_this_canvas1 = this.canvas) === null || _this_canvas1 === void 0 ? void 0 : _this_canvas1.height : editorElement.placement.y\n                        };\n                        if (animation.properties.useClipPath) {\n                            const clipRectangle = _utils_fabric_utils__WEBPACK_IMPORTED_MODULE_3__.FabricUitls.getClipMaskRect(editorElement, 50);\n                            fabricObject.set(\"clipPath\", clipRectangle);\n                        }\n                        if (editorElement.type === \"text\" && animation.properties.textType === \"character\") {\n                            var _this_canvas2;\n                            (_this_canvas2 = this.canvas) === null || _this_canvas2 === void 0 ? void 0 : _this_canvas2.remove(...editorElement.properties.splittedTexts);\n                            // @ts-ignore\n                            editorElement.properties.splittedTexts = getTextObjectsPartitionedByCharacters(editorElement.fabricObject, editorElement);\n                            editorElement.properties.splittedTexts.forEach((textObject)=>{\n                                this.canvas.add(textObject);\n                            });\n                            const duration = animation.duration / 2;\n                            const delay = duration / editorElement.properties.splittedTexts.length;\n                            for(let i = 0; i < editorElement.properties.splittedTexts.length; i++){\n                                const splittedText = editorElement.properties.splittedTexts[i];\n                                const offset = {\n                                    left: splittedText.left - editorElement.placement.x,\n                                    top: splittedText.top - editorElement.placement.y\n                                };\n                                this.animationTimeLine.add({\n                                    left: [\n                                        startPosition.left + offset.left,\n                                        targetPosition.left + offset.left\n                                    ],\n                                    top: [\n                                        startPosition.top + offset.top,\n                                        targetPosition.top + offset.top\n                                    ],\n                                    delay: i * delay,\n                                    duration: duration,\n                                    targets: splittedText\n                                }, editorElement.timeFrame.start);\n                            }\n                            this.animationTimeLine.add({\n                                opacity: [\n                                    1,\n                                    0\n                                ],\n                                duration: 1,\n                                targets: fabricObject,\n                                easing: \"linear\"\n                            }, editorElement.timeFrame.start);\n                            this.animationTimeLine.add({\n                                opacity: [\n                                    0,\n                                    1\n                                ],\n                                duration: 1,\n                                targets: fabricObject,\n                                easing: \"linear\"\n                            }, editorElement.timeFrame.start + animation.duration);\n                            this.animationTimeLine.add({\n                                opacity: [\n                                    0,\n                                    1\n                                ],\n                                duration: 1,\n                                targets: editorElement.properties.splittedTexts,\n                                easing: \"linear\"\n                            }, editorElement.timeFrame.start);\n                            this.animationTimeLine.add({\n                                opacity: [\n                                    1,\n                                    0\n                                ],\n                                duration: 1,\n                                targets: editorElement.properties.splittedTexts,\n                                easing: \"linear\"\n                            }, editorElement.timeFrame.start + animation.duration);\n                        }\n                        this.animationTimeLine.add({\n                            left: [\n                                startPosition.left,\n                                targetPosition.left\n                            ],\n                            top: [\n                                startPosition.top,\n                                targetPosition.top\n                            ],\n                            duration: animation.duration,\n                            targets: fabricObject,\n                            easing: \"linear\"\n                        }, editorElement.timeFrame.start);\n                        break;\n                    }\n                case \"slideOut\":\n                    {\n                        var _this_canvas3, _this_canvas4;\n                        const direction = animation.properties.direction;\n                        const startPosition = {\n                            left: editorElement.placement.x,\n                            top: editorElement.placement.y\n                        };\n                        const targetPosition = {\n                            left: direction === \"left\" ? -editorElement.placement.width : direction === \"right\" ? (_this_canvas3 = this.canvas) === null || _this_canvas3 === void 0 ? void 0 : _this_canvas3.width : editorElement.placement.x,\n                            top: direction === \"top\" ? -100 - editorElement.placement.height : direction === \"bottom\" ? (_this_canvas4 = this.canvas) === null || _this_canvas4 === void 0 ? void 0 : _this_canvas4.height : editorElement.placement.y\n                        };\n                        if (animation.properties.useClipPath) {\n                            const clipRectangle = _utils_fabric_utils__WEBPACK_IMPORTED_MODULE_3__.FabricUitls.getClipMaskRect(editorElement, 50);\n                            fabricObject.set(\"clipPath\", clipRectangle);\n                        }\n                        this.animationTimeLine.add({\n                            left: [\n                                startPosition.left,\n                                targetPosition.left\n                            ],\n                            top: [\n                                startPosition.top,\n                                targetPosition.top\n                            ],\n                            duration: animation.duration,\n                            targets: fabricObject,\n                            easing: \"linear\"\n                        }, editorElement.timeFrame.end - animation.duration);\n                        break;\n                    }\n                case \"breathe\":\n                    {\n                        const itsSlideInAnimation = this.animations.find((a)=>a.targetId === animation.targetId && a.type === \"slideIn\");\n                        const itsSlideOutAnimation = this.animations.find((a)=>a.targetId === animation.targetId && a.type === \"slideOut\");\n                        const timeEndOfSlideIn = itsSlideInAnimation ? editorElement.timeFrame.start + itsSlideInAnimation.duration : editorElement.timeFrame.start;\n                        const timeStartOfSlideOut = itsSlideOutAnimation ? editorElement.timeFrame.end - itsSlideOutAnimation.duration : editorElement.timeFrame.end;\n                        if (timeEndOfSlideIn > timeStartOfSlideOut) {\n                            continue;\n                        }\n                        const duration = timeStartOfSlideOut - timeEndOfSlideIn;\n                        const easeFactor = 4;\n                        const suitableTimeForHeartbeat = 1000 * 60 / 72 * easeFactor;\n                        const upScale = 1.05;\n                        var _fabricObject_scaleX;\n                        const currentScaleX = (_fabricObject_scaleX = fabricObject.scaleX) !== null && _fabricObject_scaleX !== void 0 ? _fabricObject_scaleX : 1;\n                        var _fabricObject_scaleY;\n                        const currentScaleY = (_fabricObject_scaleY = fabricObject.scaleY) !== null && _fabricObject_scaleY !== void 0 ? _fabricObject_scaleY : 1;\n                        const finalScaleX = currentScaleX * upScale;\n                        const finalScaleY = currentScaleY * upScale;\n                        const totalHeartbeats = Math.floor(duration / suitableTimeForHeartbeat);\n                        if (totalHeartbeats < 1) {\n                            continue;\n                        }\n                        const keyframes = [];\n                        for(let i = 0; i < totalHeartbeats; i++){\n                            keyframes.push({\n                                scaleX: finalScaleX,\n                                scaleY: finalScaleY\n                            });\n                            keyframes.push({\n                                scaleX: currentScaleX,\n                                scaleY: currentScaleY\n                            });\n                        }\n                        this.animationTimeLine.add({\n                            duration: duration,\n                            targets: fabricObject,\n                            keyframes,\n                            easing: \"linear\",\n                            loop: true\n                        }, timeEndOfSlideIn);\n                        break;\n                    }\n            }\n        }\n    }\n    removeAnimation(id) {\n        this.animations = this.animations.filter((animation)=>animation.id !== id);\n        this.refreshAnimations();\n    }\n    setSelectedElement(selectedElement) {\n        this.selectedElement = selectedElement;\n        if (this.canvas) {\n            var _selectedElement;\n            if ((_selectedElement = selectedElement) === null || _selectedElement === void 0 ? void 0 : _selectedElement.fabricObject) this.canvas.setActiveObject(selectedElement.fabricObject);\n            else this.canvas.discardActiveObject();\n        }\n    }\n    updateSelectedElement() {\n        var _this_editorElements_find;\n        this.selectedElement = (_this_editorElements_find = this.editorElements.find((element)=>{\n            var _this_selectedElement;\n            return element.id === ((_this_selectedElement = this.selectedElement) === null || _this_selectedElement === void 0 ? void 0 : _this_selectedElement.id);\n        })) !== null && _this_editorElements_find !== void 0 ? _this_editorElements_find : null;\n    }\n    setEditorElements(editorElements) {\n        this.editorElements = editorElements;\n        this.updateSelectedElement();\n        this.refreshElements();\n    // this.refreshAnimations();\n    }\n    updateEditorElement(editorElement) {\n        this.setEditorElements(this.editorElements.map((element)=>element.id === editorElement.id ? editorElement : element));\n    }\n    updateEditorElementTimeFrame(editorElement, timeFrame) {\n        if (timeFrame.start != undefined && timeFrame.start < 0) {\n            timeFrame.start = 0;\n        }\n        if (timeFrame.end != undefined && timeFrame.end > this.maxTime) {\n            timeFrame.end = this.maxTime;\n        }\n        const newEditorElement = {\n            ...editorElement,\n            timeFrame: {\n                ...editorElement.timeFrame,\n                ...timeFrame\n            }\n        };\n        this.updateVideoElements();\n        this.updateAudioElements();\n        this.updateEditorElement(newEditorElement);\n        this.refreshAnimations();\n    }\n    addEditorElement(editorElement) {\n        this.setEditorElements([\n            ...this.editorElements,\n            editorElement\n        ]);\n        this.refreshElements();\n        this.setSelectedElement(this.editorElements[this.editorElements.length - 1]);\n    }\n    removeEditorElement(id) {\n        this.setEditorElements(this.editorElements.filter((editorElement)=>editorElement.id !== id));\n        this.refreshElements();\n    }\n    setMaxTime(maxTime) {\n        this.maxTime = maxTime;\n    }\n    setPlaying(playing) {\n        this.playing = playing;\n        this.updateVideoElements();\n        this.updateAudioElements();\n        if (playing) {\n            this.startedTime = Date.now();\n            this.startedTimePlay = this.currentTimeInMs;\n            requestAnimationFrame(()=>{\n                this.playFrames();\n            });\n        }\n    }\n    playFrames() {\n        if (!this.playing) {\n            return;\n        }\n        const elapsedTime = Date.now() - this.startedTime;\n        const newTime = this.startedTimePlay + elapsedTime;\n        this.updateTimeTo(newTime);\n        if (newTime > this.maxTime) {\n            this.currentKeyFrame = 0;\n            this.setPlaying(false);\n        } else {\n            requestAnimationFrame(()=>{\n                this.playFrames();\n            });\n        }\n    }\n    updateTimeTo(newTime) {\n        this.setCurrentTimeInMs(newTime);\n        this.animationTimeLine.seek(newTime);\n        if (this.canvas) {\n            this.canvas.backgroundColor = this.backgroundColor;\n        }\n        this.editorElements.forEach((e)=>{\n            if (!e.fabricObject) return;\n            const isInside = e.timeFrame.start <= newTime && newTime <= e.timeFrame.end;\n            e.fabricObject.visible = isInside;\n        });\n    }\n    handleSeek(seek) {\n        if (this.playing) {\n            this.setPlaying(false);\n        }\n        this.updateTimeTo(seek);\n        this.updateVideoElements();\n        this.updateAudioElements();\n    }\n    addVideo(index) {\n        const videoElement = document.getElementById(\"video-\".concat(index));\n        if (!(0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlVideoElement)(videoElement)) {\n            return;\n        }\n        const videoDurationMs = videoElement.duration * 1000;\n        const aspectRatio = videoElement.videoWidth / videoElement.videoHeight;\n        const id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getUid)();\n        this.addEditorElement({\n            id,\n            name: \"Media(video) \".concat(index + 1),\n            type: \"video\",\n            placement: {\n                x: 0,\n                y: 0,\n                width: 100 * aspectRatio,\n                height: 100,\n                rotation: 0,\n                scaleX: 1,\n                scaleY: 1\n            },\n            timeFrame: {\n                start: 0,\n                end: videoDurationMs\n            },\n            properties: {\n                elementId: \"video-\".concat(id),\n                src: videoElement.src,\n                effect: {\n                    type: \"none\"\n                }\n            }\n        });\n    }\n    addImage(index) {\n        const imageElement = document.getElementById(\"image-\".concat(index));\n        if (!(0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlImageElement)(imageElement)) {\n            return;\n        }\n        const aspectRatio = imageElement.naturalWidth / imageElement.naturalHeight;\n        const id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getUid)();\n        this.addEditorElement({\n            id,\n            name: \"Media(image) \".concat(index + 1),\n            type: \"image\",\n            placement: {\n                x: 0,\n                y: 0,\n                width: 100 * aspectRatio,\n                height: 100,\n                rotation: 0,\n                scaleX: 1,\n                scaleY: 1\n            },\n            timeFrame: {\n                start: 0,\n                end: this.maxTime\n            },\n            properties: {\n                elementId: \"image-\".concat(id),\n                src: imageElement.src,\n                effect: {\n                    type: \"none\"\n                }\n            }\n        });\n    }\n    addAudio(index) {\n        const audioElement = document.getElementById(\"audio-\".concat(index));\n        if (!(0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlAudioElement)(audioElement)) {\n            return;\n        }\n        const audioDurationMs = audioElement.duration * 1000;\n        const id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getUid)();\n        this.addEditorElement({\n            id,\n            name: \"Media(audio) \".concat(index + 1),\n            type: \"audio\",\n            placement: {\n                x: 0,\n                y: 0,\n                width: 100,\n                height: 100,\n                rotation: 0,\n                scaleX: 1,\n                scaleY: 1\n            },\n            timeFrame: {\n                start: 0,\n                end: audioDurationMs\n            },\n            properties: {\n                elementId: \"audio-\".concat(id),\n                src: audioElement.src\n            }\n        });\n    }\n    addText(options) {\n        const id = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getUid)();\n        const index = this.editorElements.length;\n        this.addEditorElement({\n            id,\n            name: \"Text \".concat(index + 1),\n            type: \"text\",\n            placement: {\n                x: 0,\n                y: 0,\n                width: 100,\n                height: 100,\n                rotation: 0,\n                scaleX: 1,\n                scaleY: 1\n            },\n            timeFrame: {\n                start: 0,\n                end: this.maxTime\n            },\n            properties: {\n                text: options.text,\n                fontSize: options.fontSize,\n                fontWeight: options.fontWeight,\n                splittedTexts: []\n            }\n        });\n    }\n    updateVideoElements() {\n        this.editorElements.filter((element)=>element.type === \"video\").forEach((element)=>{\n            const video = document.getElementById(element.properties.elementId);\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlVideoElement)(video)) {\n                const videoTime = (this.currentTimeInMs - element.timeFrame.start) / 1000;\n                video.currentTime = videoTime;\n                if (this.playing) {\n                    video.play();\n                } else {\n                    video.pause();\n                }\n            }\n        });\n    }\n    updateAudioElements() {\n        this.editorElements.filter((element)=>element.type === \"audio\").forEach((element)=>{\n            const audio = document.getElementById(element.properties.elementId);\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlAudioElement)(audio)) {\n                const audioTime = (this.currentTimeInMs - element.timeFrame.start) / 1000;\n                audio.currentTime = audioTime;\n                if (this.playing) {\n                    audio.play();\n                } else {\n                    audio.pause();\n                }\n            }\n        });\n    }\n    // saveCanvasToVideo() {\n    //   const video = document.createElement(\"video\");\n    //   const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    //   const stream = canvas.captureStream();\n    //   video.srcObject = stream;\n    //   video.play();\n    //   const mediaRecorder = new MediaRecorder(stream);\n    //   const chunks: Blob[] = [];\n    //   mediaRecorder.ondataavailable = function (e) {\n    //     console.log(\"data available\");\n    //     console.log(e.data);\n    //     chunks.push(e.data);\n    //   };\n    //   mediaRecorder.onstop = function (e) {\n    //     const blob = new Blob(chunks, { type: \"video/webm\" });\n    //     const url = URL.createObjectURL(blob);\n    //     const a = document.createElement(\"a\");\n    //     a.href = url;\n    //     a.download = \"video.webm\";\n    //     a.click();\n    //   };\n    //   mediaRecorder.start();\n    //   setTimeout(() => {\n    //     mediaRecorder.stop();\n    //   }, this.maxTime);\n    // }\n    setVideoFormat(format) {\n        this.selectedVideoFormat = format;\n    }\n    saveCanvasToVideoWithAudio() {\n        this.saveCanvasToVideoWithAudioWebmMp4();\n    }\n    saveCanvasToVideoWithAudioWebmMp4() {\n        console.log(\"modified\");\n        let mp4 = this.selectedVideoFormat === \"mp4\";\n        const canvas = document.getElementById(\"canvas\");\n        const stream = canvas.captureStream(30);\n        const audioElements = this.editorElements.filter(isEditorAudioElement);\n        const audioStreams = [];\n        audioElements.forEach((audio)=>{\n            const audioElement = document.getElementById(audio.properties.elementId);\n            let ctx = new AudioContext();\n            let sourceNode = ctx.createMediaElementSource(audioElement);\n            let dest = ctx.createMediaStreamDestination();\n            sourceNode.connect(dest);\n            sourceNode.connect(ctx.destination);\n            audioStreams.push(dest.stream);\n        });\n        audioStreams.forEach((audioStream)=>{\n            stream.addTrack(audioStream.getAudioTracks()[0]);\n        });\n        const video = document.createElement(\"video\");\n        video.srcObject = stream;\n        video.height = 500;\n        video.width = 800;\n        // video.controls = true;\n        // document.body.appendChild(video);\n        video.play().then(()=>{\n            const mediaRecorder = new MediaRecorder(stream);\n            const chunks = [];\n            mediaRecorder.ondataavailable = function(e) {\n                chunks.push(e.data);\n                console.log(\"data available\");\n            };\n            mediaRecorder.onstop = async function(e) {\n                const blob = new Blob(chunks, {\n                    type: \"video/webm\"\n                });\n                if (mp4) {\n                    // lets use ffmpeg to convert webm to mp4\n                    const data = new Uint8Array(await blob.arrayBuffer());\n                    const ffmpeg = new _ffmpeg_ffmpeg__WEBPACK_IMPORTED_MODULE_4__.FFmpeg();\n                    const baseURL = \"https://unpkg.com/@ffmpeg/core@0.12.2/dist/umd\";\n                    await ffmpeg.load({\n                        coreURL: await (0,_ffmpeg_util__WEBPACK_IMPORTED_MODULE_5__.toBlobURL)(\"\".concat(baseURL, \"/ffmpeg-core.js\"), \"text/javascript\"),\n                        wasmURL: await (0,_ffmpeg_util__WEBPACK_IMPORTED_MODULE_5__.toBlobURL)(\"\".concat(baseURL, \"/ffmpeg-core.wasm\"), \"application/wasm\")\n                    });\n                    await ffmpeg.writeFile(\"video.webm\", data);\n                    await ffmpeg.exec([\n                        \"-y\",\n                        \"-i\",\n                        \"video.webm\",\n                        \"-c\",\n                        \"copy\",\n                        \"video.mp4\"\n                    ]);\n                    // await ffmpeg.exec([\"-y\", \"-i\", \"video.webm\", \"-c:v\", \"libx264\", \"video.mp4\"]);\n                    const output = await ffmpeg.readFile(\"video.mp4\");\n                    const outputBlob = new Blob([\n                        output\n                    ], {\n                        type: \"video/mp4\"\n                    });\n                    const outputUrl = URL.createObjectURL(outputBlob);\n                    const a = document.createElement(\"a\");\n                    a.download = \"video.mp4\";\n                    a.href = outputUrl;\n                    a.click();\n                } else {\n                    const url = URL.createObjectURL(blob);\n                    const a = document.createElement(\"a\");\n                    a.href = url;\n                    a.download = \"video.webm\";\n                    a.click();\n                }\n            };\n            mediaRecorder.start();\n            setTimeout(()=>{\n                mediaRecorder.stop();\n            }, this.maxTime);\n            video.remove();\n        });\n    }\n    refreshElements() {\n        const store = this;\n        if (!store.canvas) return;\n        const canvas = store.canvas;\n        store.canvas.remove(...store.canvas.getObjects());\n        for(let index = 0; index < store.editorElements.length; index++){\n            const element = store.editorElements[index];\n            switch(element.type){\n                case \"video\":\n                    {\n                        console.log(\"elementid\", element.properties.elementId);\n                        if (document.getElementById(element.properties.elementId) == null) continue;\n                        const videoElement = document.getElementById(element.properties.elementId);\n                        if (!(0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlVideoElement)(videoElement)) continue;\n                        // const filters = [];\n                        // if (element.properties.effect?.type === \"blackAndWhite\") {\n                        //   filters.push(new fabric.Image.filters.Grayscale());\n                        // }\n                        const videoObject = new fabric__WEBPACK_IMPORTED_MODULE_0__.fabric.CoverVideo(videoElement, {\n                            name: element.id,\n                            left: element.placement.x,\n                            top: element.placement.y,\n                            width: element.placement.width,\n                            height: element.placement.height,\n                            scaleX: element.placement.scaleX,\n                            scaleY: element.placement.scaleY,\n                            angle: element.placement.rotation,\n                            objectCaching: false,\n                            selectable: true,\n                            lockUniScaling: true,\n                            // filters: filters,\n                            // @ts-ignore\n                            customFilter: element.properties.effect.type\n                        });\n                        element.fabricObject = videoObject;\n                        element.properties.imageObject = videoObject;\n                        videoElement.width = 100;\n                        videoElement.height = videoElement.videoHeight * 100 / videoElement.videoWidth;\n                        canvas.add(videoObject);\n                        canvas.on(\"object:modified\", function(e) {\n                            if (!e.target) return;\n                            const target = e.target;\n                            if (target != videoObject) return;\n                            const placement = element.placement;\n                            var _target_left, _target_top, _target_angle;\n                            const newPlacement = {\n                                ...placement,\n                                x: (_target_left = target.left) !== null && _target_left !== void 0 ? _target_left : placement.x,\n                                y: (_target_top = target.top) !== null && _target_top !== void 0 ? _target_top : placement.y,\n                                rotation: (_target_angle = target.angle) !== null && _target_angle !== void 0 ? _target_angle : placement.rotation,\n                                width: target.width && target.scaleX ? target.width * target.scaleX : placement.width,\n                                height: target.height && target.scaleY ? target.height * target.scaleY : placement.height,\n                                scaleX: 1,\n                                scaleY: 1\n                            };\n                            const newElement = {\n                                ...element,\n                                placement: newPlacement\n                            };\n                            store.updateEditorElement(newElement);\n                        });\n                        break;\n                    }\n                case \"image\":\n                    {\n                        if (document.getElementById(element.properties.elementId) == null) continue;\n                        const imageElement = document.getElementById(element.properties.elementId);\n                        if (!(0,_utils__WEBPACK_IMPORTED_MODULE_1__.isHtmlImageElement)(imageElement)) continue;\n                        // const filters = [];\n                        // if (element.properties.effect?.type === \"blackAndWhite\") {\n                        //   filters.push(new fabric.Image.filters.Grayscale());\n                        // }\n                        const imageObject = new fabric__WEBPACK_IMPORTED_MODULE_0__.fabric.CoverImage(imageElement, {\n                            name: element.id,\n                            left: element.placement.x,\n                            top: element.placement.y,\n                            angle: element.placement.rotation,\n                            objectCaching: false,\n                            selectable: true,\n                            lockUniScaling: true,\n                            // filters\n                            // @ts-ignore\n                            customFilter: element.properties.effect.type\n                        });\n                        // imageObject.applyFilters();\n                        element.fabricObject = imageObject;\n                        element.properties.imageObject = imageObject;\n                        const image = {\n                            w: imageElement.naturalWidth,\n                            h: imageElement.naturalHeight\n                        };\n                        imageObject.width = image.w;\n                        imageObject.height = image.h;\n                        imageElement.width = image.w;\n                        imageElement.height = image.h;\n                        imageObject.scaleToHeight(image.w);\n                        imageObject.scaleToWidth(image.h);\n                        const toScale = {\n                            x: element.placement.width / image.w,\n                            y: element.placement.height / image.h\n                        };\n                        imageObject.scaleX = toScale.x * element.placement.scaleX;\n                        imageObject.scaleY = toScale.y * element.placement.scaleY;\n                        canvas.add(imageObject);\n                        canvas.on(\"object:modified\", function(e) {\n                            if (!e.target) return;\n                            const target = e.target;\n                            if (target != imageObject) return;\n                            const placement = element.placement;\n                            let fianlScale = 1;\n                            if (target.scaleX && target.scaleX > 0) {\n                                fianlScale = target.scaleX / toScale.x;\n                            }\n                            var _target_left, _target_top, _target_angle;\n                            const newPlacement = {\n                                ...placement,\n                                x: (_target_left = target.left) !== null && _target_left !== void 0 ? _target_left : placement.x,\n                                y: (_target_top = target.top) !== null && _target_top !== void 0 ? _target_top : placement.y,\n                                rotation: (_target_angle = target.angle) !== null && _target_angle !== void 0 ? _target_angle : placement.rotation,\n                                scaleX: fianlScale,\n                                scaleY: fianlScale\n                            };\n                            const newElement = {\n                                ...element,\n                                placement: newPlacement\n                            };\n                            store.updateEditorElement(newElement);\n                        });\n                        break;\n                    }\n                case \"audio\":\n                    {\n                        break;\n                    }\n                case \"text\":\n                    {\n                        const textObject = new fabric__WEBPACK_IMPORTED_MODULE_0__.fabric.Textbox(element.properties.text, {\n                            name: element.id,\n                            left: element.placement.x,\n                            top: element.placement.y,\n                            scaleX: element.placement.scaleX,\n                            scaleY: element.placement.scaleY,\n                            width: element.placement.width,\n                            height: element.placement.height,\n                            angle: element.placement.rotation,\n                            fontSize: element.properties.fontSize,\n                            fontWeight: element.properties.fontWeight,\n                            objectCaching: false,\n                            selectable: true,\n                            lockUniScaling: true,\n                            fill: \"#ffffff\"\n                        });\n                        element.fabricObject = textObject;\n                        canvas.add(textObject);\n                        canvas.on(\"object:modified\", function(e) {\n                            var _target;\n                            if (!e.target) return;\n                            const target = e.target;\n                            if (target != textObject) return;\n                            const placement = element.placement;\n                            var _target_left, _target_top, _target_angle, _target_width, _target_height, _target_scaleX, _target_scaleY;\n                            const newPlacement = {\n                                ...placement,\n                                x: (_target_left = target.left) !== null && _target_left !== void 0 ? _target_left : placement.x,\n                                y: (_target_top = target.top) !== null && _target_top !== void 0 ? _target_top : placement.y,\n                                rotation: (_target_angle = target.angle) !== null && _target_angle !== void 0 ? _target_angle : placement.rotation,\n                                width: (_target_width = target.width) !== null && _target_width !== void 0 ? _target_width : placement.width,\n                                height: (_target_height = target.height) !== null && _target_height !== void 0 ? _target_height : placement.height,\n                                scaleX: (_target_scaleX = target.scaleX) !== null && _target_scaleX !== void 0 ? _target_scaleX : placement.scaleX,\n                                scaleY: (_target_scaleY = target.scaleY) !== null && _target_scaleY !== void 0 ? _target_scaleY : placement.scaleY\n                            };\n                            const newElement = {\n                                ...element,\n                                placement: newPlacement,\n                                properties: {\n                                    ...element.properties,\n                                    // @ts-ignore\n                                    text: (_target = target) === null || _target === void 0 ? void 0 : _target.text\n                                }\n                            };\n                            store.updateEditorElement(newElement);\n                        });\n                        break;\n                    }\n                default:\n                    {\n                        throw new Error(\"Not implemented\");\n                    }\n            }\n            if (element.fabricObject) {\n                element.fabricObject.on(\"selected\", function(e) {\n                    store.setSelectedElement(element);\n                });\n            }\n        }\n        const selectedEditorElement = store.selectedElement;\n        if (selectedEditorElement && selectedEditorElement.fabricObject) {\n            canvas.setActiveObject(selectedEditorElement.fabricObject);\n        }\n        this.refreshAnimations();\n        this.updateTimeTo(this.currentTimeInMs);\n        store.canvas.renderAll();\n    }\n    constructor(){\n        this.possibleVideoFormats = [\n            \"mp4\",\n            \"webm\"\n        ];\n        this.startedTime = 0;\n        this.startedTimePlay = 0;\n        this.canvas = null;\n        this.videos = [];\n        this.images = [];\n        this.audios = [];\n        this.editorElements = [];\n        this.backgroundColor = \"#111111\";\n        this.TextColor = \"#111111\";\n        this.maxTime = 30 * 1000;\n        this.playing = false;\n        this.currentKeyFrame = 0;\n        this.selectedElement = null;\n        this.fps = 60;\n        this.animations = [];\n        this.animationTimeLine = animejs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].timeline();\n        this.selectedMenuOption = \"Video\";\n        this.selectedVideoFormat = \"mp4\";\n        (0,mobx__WEBPACK_IMPORTED_MODULE_6__.makeAutoObservable)(this);\n    }\n}\nfunction isEditorAudioElement(element) {\n    return element.type === \"audio\";\n}\nfunction isEditorVideoElement(element) {\n    return element.type === \"video\";\n}\nfunction isEditorImageElement(element) {\n    return element.type === \"image\";\n}\nfunction getTextObjectsPartitionedByCharacters(textObject, element) {\n    let copyCharsObjects = [];\n    var _textObject_text;\n    // replace all line endings with blank\n    const characters = ((_textObject_text = textObject.text) !== null && _textObject_text !== void 0 ? _textObject_text : \"\").split(\"\").filter((m)=>m !== \"\\n\");\n    const charObjects = textObject.__charBounds;\n    if (!charObjects) return [];\n    const charObjectFixed = charObjects.map((m, index)=>m.slice(0, m.length - 1).map((m)=>({\n                m,\n                index\n            }))).flat();\n    const lineHeight = textObject.getHeightOfLine(0);\n    for(let i = 0; i < characters.length; i++){\n        if (!charObjectFixed[i]) continue;\n        const { m: charObject, index: lineIndex } = charObjectFixed[i];\n        const char = characters[i];\n        var _textObject_scaleX;\n        const scaleX = (_textObject_scaleX = textObject.scaleX) !== null && _textObject_scaleX !== void 0 ? _textObject_scaleX : 1;\n        var _textObject_scaleY;\n        const scaleY = (_textObject_scaleY = textObject.scaleY) !== null && _textObject_scaleY !== void 0 ? _textObject_scaleY : 1;\n        const charTextObject = new fabric__WEBPACK_IMPORTED_MODULE_0__.fabric.Text(char, {\n            left: charObject.left * scaleX + element.placement.x,\n            scaleX: scaleX,\n            scaleY: scaleY,\n            top: lineIndex * lineHeight * scaleY + element.placement.y,\n            fontSize: textObject.fontSize,\n            fontWeight: textObject.fontWeight,\n            fill: \"#fff\"\n        });\n        copyCharsObjects.push(charTextObject);\n    }\n    return copyCharsObjects;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./src/store/Store.ts\n"));

/***/ })

});